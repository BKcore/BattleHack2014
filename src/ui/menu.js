// Generated by CoffeeScript 1.6.3
(function() {
  var LAYER_COUNT, MAX_WIDTH, MIN_SWIPE_DISTANCE, MIN_TOUCH_DELAY, SWIPE_INCREMENT_X, debounce, drawAll, images, initController, tweets;

  MAX_WIDTH = 3000;

  MIN_TOUCH_DELAY = 2000;

  MIN_SWIPE_DISTANCE = 50;

  SWIPE_INCREMENT_X = window.innerWidth;

  LAYER_COUNT = 1;

  images = null;

  tweets = [];

  $(function() {
    return drawAll();
  });

  drawAll = function() {
    var stage, viewport, win;
    viewport = {
      x: 0,
      y: 0
    };
    win = {
      width: window.innerWidth,
      height: window.innerHeight
    };
    stage = new Kinetic.Stage({
      container: 'main',
      width: win.width,
      height: win.height
    });
    return initController(true, {
      onTouch: function(x, y) {
        return console.log('TOUCH', x, y);
      }
    });
  };

  debounce = function(time, fn) {
    return _.debounce(fn, time);
  };

  initController = function(autoConnect, api) {
    var controller, pointer, tTouch;
    controller = new Leap.Controller({
      enableGestures: true
    });
    console.log('Leap Motions start.');
    tTouch = 0;
    pointer = $('#pointer');
    controller.on('frame', function(frame) {
      var finger, s, x, y, _ref;
      finger = (_ref = frame.pointables) != null ? _ref[0] : void 0;
      if (finger == null) {
        return;
      }
      x = window.innerWidth / 2 + finger.tipPosition[0] * 7;
      y = window.innerHeight - finger.tipPosition[1] * 5 + 250;
      s = finger.tipPosition[2] / 60;
      pointer.css('transform', "translate3d(" + x + "px, " + y + "px, 0px) scale(" + s + ", " + s + ")");
      if (finger.tipPosition[2] < 0) {
        console.log('HAY');
        if (Date.now() - tTouch > MIN_TOUCH_DELAY) {
          tTouch = Date.now();
          api.onTouch(x, y);
        }
      }
    });
    controller.on('connect', function() {
      return console.log('Leap Motion Server connected.');
    });
    controller.on('disconnect', function() {
      return console.log('Leap Motion Server disconnected.');
    });
    controller.on('deviceConnect', function() {
      return console.log('Leap Motion connected.');
    });
    controller.on('deviceDisconnect', function() {
      return console.log('Leap Motion disconnected.');
    });
    if (autoConnect) {
      return controller.connect();
    }
  };

}).call(this);
